import {
  processTemplates
} from "./chunk-6XWQDYZV.js";
import {
  overlay
} from "./chunk-PU5IKCN6.js";
import {
  OverlayMixin,
  overlayStyles
} from "./chunk-22WHDZKB.js";
import {
  ThemableMixin,
  registerStyles
} from "./chunk-2SCHR2AP.js";
import {
  DirMixin
} from "./chunk-BRWGYQM2.js";
import {
  defineCustomElement
} from "./chunk-IJ3VEXPW.js";
import {
  PolymerElement
} from "./chunk-CG3QMXU5.js";
import {
  html
} from "./chunk-XB4RSW42.js";

// node_modules/@vaadin/overlay/theme/lumo/vaadin-overlay-styles.js
registerStyles("vaadin-overlay", overlay, { moduleId: "lumo-vaadin-overlay" });

// node_modules/@vaadin/overlay/src/vaadin-overlay.js
registerStyles("vaadin-overlay", overlayStyles, { moduleId: "vaadin-overlay-styles" });
var Overlay = class extends OverlayMixin(ThemableMixin(DirMixin(PolymerElement))) {
  static get template() {
    return html`
      <div id="backdrop" part="backdrop" hidden$="[[!withBackdrop]]"></div>
      <div part="overlay" id="overlay" tabindex="0">
        <div part="content" id="content">
          <slot></slot>
        </div>
      </div>
    `;
  }
  static get is() {
    return "vaadin-overlay";
  }
  /** @protected */
  ready() {
    super.ready();
    processTemplates(this);
  }
  /**
   * @event vaadin-overlay-open
   * Fired after the overlay is opened.
   */
  /**
   * @event vaadin-overlay-close
   * Fired when the opened overlay is about to be closed.
   * Calling `preventDefault()` on the event cancels the closing.
   */
  /**
   * @event vaadin-overlay-closing
   * Fired when the overlay starts to close.
   * Closing the overlay can be asynchronous depending on the animation.
   */
  /**
   * @event vaadin-overlay-closed
   * Fired after the overlay is closed.
   */
  /**
   * @event vaadin-overlay-escape-press
   * Fired before the overlay is closed on Escape key press.
   * Calling `preventDefault()` on the event cancels the closing.
   */
  /**
   * @event vaadin-overlay-outside-click
   * Fired before the overlay is closed on outside click.
   * Calling `preventDefault()` on the event cancels the closing.
   */
};
defineCustomElement(Overlay);

export {
  Overlay
};
/*! Bundled license information:

@vaadin/overlay/src/vaadin-overlay.js:
  (**
   * @license
   * Copyright (c) 2017 - 2023 Vaadin Ltd.
   * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
   *)
*/
//# sourceMappingURL=chunk-VEHTF7KX.js.map
